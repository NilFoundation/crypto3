name: Crypto3 Build and Test on Linux Platforms (Reusable)

on:
  workflow_call:
    inputs:
      submodules-refs:
        type: string
        description: "Lines with submodules' repo names and refs (e.g. `org/repo: ref`)"
        required: false
      check-names:
        type: string
        description: "Newline-separated names of checks to run, concurrency level can be provided after space for each check (e.g. `check1 4\ncheck2 2`)"
        required: true

env:
  TESTS_ARTIFACT_NAME: "test-results-linux"

jobs:
  build-and-test:
    name: "Build and test Linux"
    runs-on: [self-hosted, Linux, X64, aws_autoscaling]
    steps:
      # https://github.com/actions/checkout/issues/1552
      - name: Clean up after previous checkout
        run: chmod +w -R ${GITHUB_WORKSPACE}; rm -rf ${GITHUB_WORKSPACE}/*;

      - name: Checkout Crypto3 repository
        # We need full history, because during CMake config stage we are finding the nearest tag
        uses: actions/checkout@v3
        with:
          repository: NilFoundation/crypto3
          fetch-depth: 1 # Fetch only the latest commit on the triggered branch/ref
          submodules: recursive

      - name: Checkout submodules to specified refs
        if: inputs.submodules-refs != ''
        uses: NilFoundation/ci-cd/actions/recursive-checkout@v1.2.1
        with:
          refs: ${{ inputs.submodules-refs }}
          paths: |
            ${{ github.workspace }}/**
            !${{ github.workspace }}/
            !${{ github.workspace }}/**/.git/**

      - name: Determine submodule path
        id: get-submodule-path
        run: |
          # Parsing .gitmodules to find the path of the submodule repository.
          submodule_path=$(git config --file .gitmodules --get-regexp path | awk -v repo_name="${{ github.event.repository.name }}" '$0 ~ "submodule\\."repo_name"\\.path" { sub(/.*path /, ""); print }')
          echo "Submodule path is $submodule_path"
          echo "submodule-path=$submodule_path" >> $GITHUB_OUTPUT

      - name: Checkout current repository as umbrella submodule lib
        # TODO: update to v4 when runner will support node20, for now it raises `GLIBC_2.27 ... GLIBC_2.28 not found`
        uses: actions/checkout@v3
        with:
          path: ${{ steps.get-submodule-path.outputs.submodule-path }}
          fetch-depth: 1
          submodules: recursive

      - name: Run checks, copy test results
        run: |
          input="${{ inputs.check-names }}"

          # Split the input into lines
          IFS=$'\n' read -r -d '' -a lines <<< "$input"$'\n' || true
          results_dir="./results"
          mkdir -p "$results_dir"

          for line in "${lines[@]}"; do
            # Skip empty lines
            [[ -z "$line" ]] && continue

            # Split each line into words
            IFS=' ' read -r -a parts <<< "$line"

            check_name="${parts[0]}"
            concurrency="${parts[1]:-}" # Default to empty if not specified
            extra_args=""

            if [[ -n "$concurrency" ]]; then
              extra_args+=" --cores $concurrency"
            fi

            echo "Running check for $check_name ${extra_args:+with $extra_args}"
            nix build .?submodules=1#checks.x86_64-linux.$check_name $extra_args

            cp -r ./result/* "$results_dir/$check_name"
            rm -rf result
          done

      - name: Upload tests JUnit results
        # TODO: update to v4 when runner will support node20, for now it raises `GLIBC_2.27 ... GLIBC_2.28 not found`
        # Don't forget to update download action, v3 and v4 are incompatible
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.TESTS_ARTIFACT_NAME }}
          if-no-files-found: error
          path: results
