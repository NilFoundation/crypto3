//---------------------------------------------------------------------------//
// Copyright (c) 2021 Mikhail Komarov <nemo@nil.foundation>
// Copyright (c) 2022 Aleksei Moskvin <alalmoskvin@nil.foundation>
//
// MIT License
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
//---------------------------------------------------------------------------//

#define BOOST_TEST_MODULE pickles_struct_test

#include <string>

#include <boost/test/unit_test.hpp>
#include <boost/test/data/test_case.hpp>
#include <boost/test/data/monomorphic.hpp>

#include <boost/multiprecision/cpp_int.hpp>

#include <nil/crypto3/algebra/curves/vesta.hpp>
#include <nil/crypto3/algebra/curves/pallas.hpp>

#include <nil/crypto3/algebra/fields/arithmetic_params/vesta.hpp>

#include <nil/crypto3/zk/snark/systems/plonk/pickles/proof.hpp>
#include <nil/crypto3/zk/snark/systems/plonk/pickles/expr.hpp>
#include <nil/crypto3/zk/snark/systems/plonk/pickles/constants.hpp>
#include <nil/crypto3/zk/snark/systems/plonk/pickles/verifier_index.hpp>
#include <nil/crypto3/zk/snark/systems/plonk/pickles/verifier.hpp>

#include <nil/crypto3/math/domains/basic_radix2_domain.hpp>


using namespace nil::crypto3;
using namespace nil::crypto3::zk::snark;
using curve_type = algebra::curves::vesta;
using group_type = curve_type::template g1_type<algebra::curves::coordinates::affine>;
using scalar_field_type = curve_type::scalar_field_type;
using base_field_type = curve_type::base_field_type;

constexpr static const std::size_t PERMUTES = kimchi_constant::PERMUTES;
constexpr static const std::size_t CONSTRAINTS = kimchi_constant::CONSTRAINTS;
constexpr static const std::size_t COLUMNS = kimchi_constant::COLUMNS;

BOOST_AUTO_TEST_SUITE(pickles_proof_struct_test_suite)

BOOST_AUTO_TEST_CASE(pickles_proof_struct_test_suite) {
    zk::snark::proof_type<curve_type> proof;
    zk::snark::verifier_index<curve_type> index;
    std::vector<std::vector<group_type::value_type>> w_comm_unshifted = {{
              {0x37D59F0CA7295B0B8C8A658A848933E8EE65F1524C1D2FAD1A2BBEBA01F34DB5_cppui_modular256, 0x38BE9AFC02BE5C46B256233C81A668AF9F96B8482E6DCC09C96A70DDDF442FEE_cppui_modular256},
              {0x2091BF5506C80B75CA58F2A7DB834C2EB165472D0B2A81BE8021BF9A9CCA5AA2_cppui_modular256, 0x39F8E74CCED923CC68A42FE5BADD44A606F0F534A52DB0931DECF6AC8DC11A39_cppui_modular256},
              {0x15D23E10A563E84D239600A75B11523D4522B2C251FD75B0BC517D62676EC397_cppui_modular256, 0x14978858398AF358CE60C21B331E58E7617A5FB7D3F3D25B0079945905FA152C_cppui_modular256},
              {0x3C2AE60A1169863541F6435E895B2BFED6BE488027489194B9060F246F228781_cppui_modular256, 0x0C593145B42D87F2F6BFA525E53F6F70BF70ABBDDAF7DC2328A7C4E62429DC2D_cppui_modular256},
              {0x1D66359053B1B305F65D69FEA147CF182C4D8E1130EA6F3D0224952AEB9A88CD_cppui_modular256, 0x28759D87B74BF16443700034A42A7E7AC307FE949992B59BD3C57A3A6B2F8EC2_cppui_modular256},
              {0x297F2B9076E473E9BF3A385F1BCE10480E65CA640B08587E059AF017AB8D4172_cppui_modular256, 0x12EB28BE66434FF49E5F897066CE07F492C21983DE7961575B894DE46DF0E341_cppui_modular256},
              {0x3D40963F63F238DCA50026C01F6A7A265165624E956FBC16578D8ED303A68EC0_cppui_modular256, 0x3E269040E3E7BDEF490CEE6B0CAA3425367E777A8E18E9B5641E6BB1931EE690_cppui_modular256},
              {0x238BD7EBC99EAB0458C81D7D2F3601F3F8F2DCE5D8C9ECFA84D9156B268920B9_cppui_modular256, 0x3E76531982AB5721C2A843667FEA035E5CF0CC46E09764E8CA0E490F5F71C616_cppui_modular256},
              {0x31A91EC4F6FBA9193F10385AFAAC0631A9E062426BED82DEE9F70464DAFEDB27_cppui_modular256, 0x364F995D1C7B1ACC8FEE6612FFA89B4499F3AC6B7A52898B99F2648F15116000_cppui_modular256},
              {0x3EBF8308C09A54C9F828658CE46562DAC696F0C455F5ADFA6437DAA49328AAC6_cppui_modular256, 0x177B5E81A8C2BCA234C1BE2D06A43463B41D58D8C8A1426B58FE8EF2CBD19E84_cppui_modular256},
              {0x02F7E5219B5F53DF4FE489F9827D79DCBBCBC43BC0F11403B6F9F9AB0F2D5287_cppui_modular256, 0x0F1326405C0DDE95C8DB9D90A8983CE7F549ACEE1791AEDD15794FA7FEDF56BB_cppui_modular256},
              {0x310126DE51CA0F4E88A15B5192F2E10645B3D3FFEF137609805B1D112ACEAD93_cppui_modular256, 0x2AA8D27909092417B8513EBF43E3B2F80D6212C845BFCD79C5E76343D1047581_cppui_modular256},
              {0x36FB4AF93A11A17EB064DE001D7BE84D6F957539B66243A31773CE1254672FD5_cppui_modular256, 0x3D750F7FD0EBF2A251C123870D94305A357A2AF90232FF3DD613B28B6C95B152_cppui_modular256},
              {0x14D1F0BEB1F9E03A7C0D2D137318E9EC825F445FD62E533C758C120597159648_cppui_modular256, 0x1829116C05DB93863741AFEF107AD3DD16CDEBAB91D0800E059D51696F4FB1F0_cppui_modular256},
              {0x1AFA3C262588E880CD82B938F1DC48E209A170562F480B9FFCA27B4CFFF9C5BD_cppui_modular256, 0x1EF02FAAC420520FAEEC93CE20A41639AE47B495035EB70A7E09953B9EB05E3C_cppui_modular256},
        }};

    std::vector<group_type::value_type> w_comm_shifted(COLUMNS);

    // w_comm
   for (size_t i = 0; i < w_comm_unshifted.size(); ++i) {
       proof.commitments.w_comm[i].unshifted.assign(w_comm_unshifted[i].begin(), w_comm_unshifted[i].end());
       proof.commitments.w_comm[i].shifted = w_comm_shifted[i];
   }
//    // z_comm
    proof.commitments.z_comm.unshifted.emplace_back(
       0x02D12945583E0CE5C20142E1DB4B19A8E644BCEE07F25516941DB26A38E1EA5D_cppui_modular256,
       0x36F230B302E081E88BAEB5B3FD213D99CAD1CD7E8B2A2483B05FBA2D414155DD_cppui_modular256);

    // t_comm
    proof.commitments.t_comm.unshifted.assign({
        {0x110D9EF8090D154F6EFF13AC56AABA47F74566FFE37ACD28620A2B20E4F6F103_cppui_modular256,
            0x26E410DBC25C6D70806230921A18EFCF8CB5118B86D107DF470B52CD3F886768_cppui_modular256},
        {0x01EE59DAF6AB1C13AF0D05909EFD17A1C032956371384A0AD9555E42A6E52AAF_cppui_modular256,
            0x2ABDF22ED010D9A34FCC62D43B3B06432976EAF2855A1AD2292F189E45E0A0F9_cppui_modular256},
        {0x3FA91D5BC8AC02F5E88CE34492E06354C8FB35E2FB635EC0D6E7DF97DB2FDAB2_cppui_modular256,
            0x30F90A99F0EA41BFA466310309F220FF4C3442878FBC6A0EDDCC1D1C1B5B9AEC_cppui_modular256},
        {0x37962BA26AB78DA50CD54712604EF151EB45AF2A3903D77129495E7ECD6CFF65_cppui_modular256,
            0x1BD455ED670C7C422A6A2B179411D014EC970B2AFB3491AEEC09DF613B47DB1D_cppui_modular256},
        {0x1EB582AA419C591322EA6295EE6E028CAB38DAF13F611EFFA7C605369253E561_cppui_modular256,
            0x0BEF30013E760029F68C81BCA30D73BC09F7F9BB8F632F2CB438783834D854A1_cppui_modular256},
        {0x2CEF8331B908170318C146626953800A8B0B3DDFA060B6BE9C1303903004A10D_cppui_modular256,
            0x1C381FC7E8A986E28DE8E254FE335019EF0B016E9EE74118FB1D38FBD6C611FF_cppui_modular256},
        {0x0A8C3CE07FC7DABF928F064376C201AF936AC5501AC32E08B87BC6C3D02B4703_cppui_modular256,
            0x14740C6D1C4984E1049CC26F7F1C8AD4605C3BB32C704214CBD9F845E8E24635_cppui_modular256},
    });

    proof.proof.lr.assign({
        {{0x0097DDEE3FC1597E4CA77260AC311372574CD19B0E48466745DDA9A5927F9525_cppui_modular256, 0x114F2A66D1AAE2C1A0ADA357F7F454DD4BD6722A0C747C84712CD498EEC814D1_cppui_modular256},
            {0x30C7AE3DC6B1BA3E35385FEBCEFE39DA16D4ACF77780B098387B1450D4773D2E_cppui_modular256, 0x1F3CCD56C3D0523F675FA85361878ECC6A69C5D833408DB32E16F78C6733BA10_cppui_modular256}},
        {{0x17F3C28356AB5AF3FC69DF809114E10081FD01DAFE81F26A2538223033258FA2_cppui_modular256, 0x2361848DC301E6534FEECE2CCF9FF176BA15C57C5011EBCC05C8B663EB4D2D8F_cppui_modular256},
            {0x2F05F9AC607AB4E99E2B2A25D1B81A677FC58AE964B6C58F8DF7348F0798D28C_cppui_modular256, 0x3DFD1D28554A0787E24FCD989A3C0B8D957DB7094FE7CA54F849DCC7DDE42D0C_cppui_modular256}},
        {{0x2DC7573E0F46A4EA37CBECCAD3DE5C2E2150956C85111805C57EDA0F6B62F064_cppui_modular256, 0x33CA15AA795016559B5E00380D4931E35809D9A1F574063B7BEB6AC195CB9F8B_cppui_modular256},
            {0x24689817A7690449627E6FE240CBAFB2BEA71D2FC6825BD7EE4B29B5339AA457_cppui_modular256, 0x29308F028040D033813FBDF844C0512F4472440CE72C44B241B03D776AF8178C_cppui_modular256}},
        {{0x3C289CD39608326A27B949CA9332C4B7F3A9F82668E2A8DFC187952A6ECA4734_cppui_modular256, 0x2AB833558061F365CA621F5E570953AD5BBFBF45809B245C8D66D0CD00C9C8D6_cppui_modular256},
            {0x22A6D04A1964B9B54F5183648117CD67FCAF9AB2B0D926565D725B87108F586B_cppui_modular256, 0x36016051DA2BA6FE1D8BE3A614959AE431B3DC9F543D4CC3E6526A843FD3F668_cppui_modular256}},
        {{0x3C4DE244A5E4B969BBB3BA8A41FC1076FBF8FCD1174AB350AB9F414B2B5F02B7_cppui_modular256, 0x273F19EDC54275DF166E3A80D3F8BBCE48C67F49154C45D576F5838E59049401_cppui_modular256},
            {0x1A6C28E8E8679AE8998192577C2FA9B5ABC67FFE84ADB63D4F655960ADCA06C3_cppui_modular256, 0x16A0AD9FE756A1285C0F151EAB8E8C90A84862E3C3B552BF11BD473FDF42AEA5_cppui_modular256}},
        {{0x25DB17042CD86EFBF52B129CF874E093D0F6930D6D9B91A1874954B8E2F89DAC_cppui_modular256, 0x1790B39E7FF4D2C2D40ACF986D32EAC3D0C8CA6024555867BE258A9F581D68A4_cppui_modular256},
            {0x213853D57B0E3FD0D663149C5DE7A1CDC9B4796F946D33BCFC5731A1FE262D76_cppui_modular256, 0x0D6156942605E3AD61EAE4D43D60434B1351B2F1817C9E322F7A0BD78EA0E7FD_cppui_modular256}},
    });

    proof.proof.delta = {0x1841D56E15736C31F97ADAE3DCA7B0C7EFDDB800C6AD958C8C317206C00DC72D_cppui_modular256,
                         0x371285C1D5F12E0C32C4913C64678ABC8947C5D61BE6C7D0AB102CBF4E955893_cppui_modular256};
    proof.proof.z1 = 0x0F55A25FD477DB4D5486AD5B7FDECD3BA87AEABD8FD8EB81158D68CE342AD400_cppui_modular256;
    proof.proof.z2 = 0x35E29FC28BED57075811257A7182C30C0273CB460AF5212E14B5D47C6B820E9E_cppui_modular256;
    proof.proof.sg = {0x22202A4EE86A05EAD5695178EC52EE4B27B162B4A41AA26D2181BC8BE7620F2F_cppui_modular256,
                      0x195B0A20E4C1CD6840DF5B0937CB00CA9C10AEB7B2A05C8721D5571ECBECAA7D_cppui_modular256};

    proof.evals[0].w[0]  = {0x218C1B364EAB7D60FB30A1D1865BB51B9EC1BBD61308CAAE14244A054B122E93_cppui_modular256};
    proof.evals[0].w[1]  = {0x3E72A7C4AB5A497B6B4C19E2F4BDBFDA667526DFF7310B59053536560A5B69B1_cppui_modular256};
    proof.evals[0].w[2]  = {0x2E678A3459123FBCAB752483B33EE996CDE93AA456A77AA68EE2B392E85A8AD3_cppui_modular256};
    proof.evals[0].w[3]  = {0x15051A7601CC5949B5CE177941BA55869E860C39C9DE872387958B8907979BCE_cppui_modular256};
    proof.evals[0].w[4]  = {0x0485A39322005BF5C7A01501646A1CAED8BF7BDF3EBBF563D7E38DD59EED4C1F_cppui_modular256};
    proof.evals[0].w[5]  = {0x0AC812E8C385BF25F1CB39E9F5081567AA21329558BE4DD1A9108344C23184BD_cppui_modular256};
    proof.evals[0].w[6]  = {0x3FF83F99525275EFE8A9BA42F177E083ADDF4618AC5981BB99510FEE28384A24_cppui_modular256};
    proof.evals[0].w[7]  = {0x14736CB71FEDE1E1F004BC88D20A9897F5DE9E48C06B22536450EA9CBE66BDF3_cppui_modular256};
    proof.evals[0].w[8]  = {0x3E0A7FD54262D5A95C13E98950C29412D2D70C410F294958A2D3876C1C59B6BE_cppui_modular256};
    proof.evals[0].w[9]  = {0x298284D82997B6D9814B8643C976B43601DE36E710C2A67CFDB83AADA8532744_cppui_modular256};
    proof.evals[0].w[10] = {0x0D478CF727DADD5E084A9077F49EEFFE9337E7FF43B079617BBAE51A67ABE0C6_cppui_modular256};
    proof.evals[0].w[11] = {0x3E25792FCB0C4C612C3BC6C772B7E8D74EB844F841D25C766406DD497D594EDF_cppui_modular256};
    proof.evals[0].w[12] = {0x33F1A21853B94B69C3838A5BB737F6795F927047521344F98A9C42EC62131941_cppui_modular256};
    proof.evals[0].w[13] = {0x29BDCB00DC664A725ACB4DEFFBB8041B706C9B9662542D7CB131A88F46CCE3A3_cppui_modular256};
    proof.evals[0].w[14] = {0x1F89F3E96513497AF2131184403811BD8146C6E5729515FFD7C70E322B86AE05_cppui_modular256};
    proof.evals[0].z = {0x1FE86B9FC1DF5F4888F0FA8A83E8B724ABB34455BD297CF03D5DAE3EFC7BD428_cppui_modular256};
    // proof.evals[0].poseidon_selector = {0x1FE86B9FC1DF5F4888F0FA8A83E8B724ABB34455BD297CF03D5DAE3EFC7BD428_cppui_modular256};
    // proof.evals[0].generic_selector = {0x1FE86B9FC1DF5F4888F0FA8A83E8B724ABB34455BD297CF03D5DAE3EFC7BD428_cppui_modular256};
    proof.evals[0].s[0] = {0x0284596D78C52B3B5BA71D1A9A173ABF9E63F9B848C39206169C36B878AF6DDA_cppui_modular256};
    proof.evals[0].s[1] = {0x0614A2627FBCD1D7356FB7BFB33DD7D7C81F761E421B12251672D250A0C2F5A5_cppui_modular256};
    proof.evals[0].s[2] = {0x06170D49F379823E790EE625247E2DCFD100B5B5ACF8A900D86405D09C480A72_cppui_modular256};
    proof.evals[0].s[3] = {0x2E1F15C0649E24B7F3AB4DA6E881866F2E74C11656850F1DDD9EA945B3BFA6A9_cppui_modular256};
    proof.evals[0].s[4] = {0x3725E0A20A90564DACEEBD1B8E4037D9A563AD0105BB87932846E5194F5853FF_cppui_modular256};
    proof.evals[0].s[5] = {0x315BC904B7DBD7D45780562C242882BF93CE41138876DA231D9D0AFB8036CF11_cppui_modular256};

    proof.evals[1].w[0]  = {0x0CE4579CFE87F1D15160DDE1078E01AC2795B12A93D40263C613A3341EF2C27D_cppui_modular256};
    proof.evals[1].w[1]  = {0x3728E63BF46BAA60AC6078292280E1FD7F4FB0F85BBD642CB62F4600737A6CAC_cppui_modular256};
    proof.evals[1].w[2]  = {0x3C89AC7E8C016AF82E276185E310D5D36E0F3A14202A981C4F51D014569E458E_cppui_modular256};
    proof.evals[1].w[3]  = {0x3099E164DFF4B7506A32E0D10119A74A0EE794BB1F4C488EBE192C37BC4E4E5C_cppui_modular256};
    proof.evals[1].w[4]  = {0x1A8C403E7B17F751B6C9573DD36C1BFCE6FA6B0C1A51D5759184D63DFF2CB28A_cppui_modular256};
    proof.evals[1].w[5]  = {0x092E41B804AA2C03F28EE41EBA2F370C6FD6C1ADBEA08D1C19C50DDF3D7E7154_cppui_modular256};
    proof.evals[1].w[6]  = {0x208E4B0B4277B90CE839D21A96E3C68ECA076C6EC3992A7F0D2277E6CC4A9C55_cppui_modular256};
    proof.evals[1].w[7]  = {0x3BF1050F00050486620C9ABC34863D8628AAC362EC76BA4234618EC7956EC9F2_cppui_modular256};
    proof.evals[1].w[8]  = {0x04E39785D3438752F23993771796047837282E33171C5A62EF1E7B5141855829_cppui_modular256};
    proof.evals[1].w[9]  = {0x1B5BA02A80313D49A8D2BFCE1E951A3C795EB2A01A65C193D92B46D61B26ACCF_cppui_modular256};
    proof.evals[1].w[10] = {0x327242E90C704A0EB53538A6F1311E6B8E1DBC86812246DA7597B3AC1A4FF8CD_cppui_modular256};
    proof.evals[1].w[11] = {0x109B911705D2385C5AD5B80ED76D78835971175398C34D2E962C49FB1F3F3FCE_cppui_modular256};
    proof.evals[1].w[12] = {0x39F57515F459363F447611DFF8F54D4A1AF705D7E477086F2154258DCCE6C991_cppui_modular256};
    proof.evals[1].w[13] = {0x234F5914E2E034222E166BB11A7D2210BA365B6026DDCA94134ED0337A8E5353_cppui_modular256};
    proof.evals[1].w[14] = {0x0CA93D13D167320517B6C5823C04F6D75975B0E869448CB905497AD92835DD15_cppui_modular256};
    proof.evals[1].z = {0x359872A0067A0765E595D6AFEB42B023EAC3EBC9735945F780A635A9CC256703_cppui_modular256};
    // proof.evals[1].poseidon_selector = {0x1FE86B9FC1DF5F4888F0FA8A83E8B724ABB34455BD297CF03D5DAE3EFC7BD428_cppui_modular256};
    // proof.evals[1].generic_selector = {0x1FE86B9FC1DF5F4888F0FA8A83E8B724ABB34455BD297CF03D5DAE3EFC7BD428_cppui_modular256};
    proof.evals[1].s[0] = {0x353E417DD92E1B8C4C2BB40358A4FF43CED6AFDF2218C49867D2C45D1DB174AF_cppui_modular256};
    proof.evals[1].s[1] = {0x109165335DD3FABD6AF198D5E7CC45B4E11356D1A4027B8BC01344356F7ADABB_cppui_modular256};
    proof.evals[1].s[2] = {0x177C41BBAE20A957704CBCD4777244F4BC252BEA68362D9F0B00A22267247C3A_cppui_modular256};
    proof.evals[1].s[3] = {0x34D9D201F2E42D5E3D86CD5C70DF153E472CD9401CE1E1FB9EC742EFF8BEDE2C_cppui_modular256};
    proof.evals[1].s[4] = {0x00C022C8689A0F23EFA00918CCA8ECCB106CB89037E7B034840DCD614E4DECF7_cppui_modular256};
    proof.evals[1].s[5] = {0x0E9A479740A633919DF200A1F25FF75982AFF0749111C1E87EBB69DC2B1A5BC7_cppui_modular256};


    proof.ft_eval1 = 0x01AEC83A8925441906ED7C843289815B1F2098EBE21BA2EC9C9BDE738323A79C_cppui_modular256;

    index.domain = math::basic_radix2_domain<scalar_field_type>(64);
    index.domain.omega = 0x1868CA50534A180D97FF23A878E088B0B9569C85B0A15D666C23DED157FCEEBA_cppui_modular256;
    // std::cout << "index domain size " << index.domain.size() << '\n';
    index.max_poly_size = 64;
    index.max_quot_size = 448;

    index.srs.g.assign({
        {0x121C4426885FD5A9701385AAF8D43E52E7660F1FC5AFC5F6468CC55312FC60F8_cppui_modular256, 0x21B439C01247EA3518C5DDEB324E4CB108AF617780DDF766D96D3FD8AB028B70_cppui_modular256},
        {0x26C9349FF7FB4AB230A6F6AEF045F451FBBE9B37C43C3274E2AA4B82D131FD26_cppui_modular256, 0x1996274D67EC0464C51F79CCFA1F511C2AABB666ABE67733EE8185B71B27A504_cppui_modular256},
        {0x26985F27306586711466C5B2C28754AA62FE33516D75CEF1F7751F1A169713FD_cppui_modular256, 0x2E8930092FE6A18B331CE0E6E27B413AA18E76394F18A2835DA9FAE10AA3229D_cppui_modular256},
        {0x014B2DB7B753A74D454061FCB3AC537E1B4BA512F9ED258C996A59D9DACD13E5_cppui_modular256, 0x06F392D371494FC39174C4B70C692B96F3B7C42DA288F6B7AABF463334A952D0_cppui_modular256},
        {0x12CA0E2DBF286021CB76B7C12B6C9AD7FDF1D05F722F6EF14BD43E53E7B92120_cppui_modular256, 0x216A80B79D3995D1F39CE19855C475052D1148ACBDD379FE98961BFBD0A3E428_cppui_modular256},
        {0x1D257C1F4EC9872C9E06549BC910F7B7196F2E7CB120AEC3FDCEB049C7A0C9A5_cppui_modular256, 0x191CBEC20ED5EA342B6B395E92996215F7D93C675DA56A13D548EFB58524D336_cppui_modular256},
        {0x06236026ED7DC19C44540FBAF0C1C3498F82880A34422547FFF519FFF744BB48_cppui_modular256, 0x3A02C5410DABDE160BD09232A14F00B1EF6CD4D6285C90A8D41FA00BFF922F0A_cppui_modular256},
        {0x079333FDE60D3F670068B5A1D486EDDD87DDF91D1E1FC000F387991B4ED848B4_cppui_modular256, 0x3F7FC1A39FD74BDEDC129195080D298CFC2C2CF714BAD9F9334F0DAFB035C200_cppui_modular256},
        {0x069B398C2968553B7987FF840CF0B71359D10F249F08C40898550A63F196D856_cppui_modular256, 0x1B68BB879D6EC4EFAA2207E212B59BAD0D8E5E2493F99BE3F2F24764046CD277_cppui_modular256},
        {0x2CBD65973AE0BE0B9E652CEC35EFE509E1FA8DD8349DC1E644DB494DC2B4FD75_cppui_modular256, 0x1E27B8178E720407694F4EA1413B0CB87AF4058CB308BBD68FF42D5078DE243E_cppui_modular256},
        {0x0F29A22EF6949DE85427F72CCD04E3F8F56837BB56DA17D8FA5DE9025E6B9ED5_cppui_modular256, 0x26A2CD91BD2771E20DECAACDC6CA96E7759668F3D0B7E8810866D27737627A59_cppui_modular256},
        {0x300EE47C831AB28067BFE9364A819C894FA02155C5FC3E94E83A0EAD3110E9E5_cppui_modular256, 0x2D4FD253E12958FD548AC51E62F3158EB3EE8CB10F148F0A44D2C6E562D632CA_cppui_modular256},
        {0x2A9EA5BCE9D10ED951E11E4DE64DED939D1FC6B5DE07DFF33D49861B7DE2EE71_cppui_modular256, 0x0708F926C80F2A68C3F59C8C25D26F29FF90842A7C1BEDE0B1801D7DF258077B_cppui_modular256},
        {0x2DEA83FC8EA7A9727A5F2184EDCBF6A17083C10DACE4F45DADB330CE1624DC8B_cppui_modular256, 0x02DE1252440BF67F0B7A40DE4B7D9157993CE1D0DC47F8D4B3BCF126FBE00E2B_cppui_modular256},
        {0x341DE1D9B175235F492C6DAD8580443D11B12DF39EE95D497935BFF99D4E775F_cppui_modular256, 0x01177651EA542F5402CA5B075C5A2082F5F4EE1D3B054FC97CF7D30758D89841_cppui_modular256},
        {0x37D2BB9884B41B3125444D81C59E8EDA167284FB5D637C9D54B21753830F14A0_cppui_modular256, 0x0D5708EB79051B4704EDB309CDFCA38030CD8B656A5C9051B5C1AFA6B1C30D46_cppui_modular256},
        {0x026A67515EF102D65C7694144B457240C4E3270A0240640A5EAF9B3E7489C54E_cppui_modular256, 0x1B78FD66A3E4A168D0CEC1846F03B1624342491857F9204743A44DE2E90A42E2_cppui_modular256},
        {0x2E2489CBFD8534059574AACD43C137788C54D86B1292CF4B17850EE95F913198_cppui_modular256, 0x10D13EAD8E28E1493325B7DBB89025DA06A8867EE60BCADD1D794A847D871A46_cppui_modular256},
        {0x3FB39F7B1DBD63694D40FC6C105FBD8242908DB2CF82B5F0FACE46A7792CC0A0_cppui_modular256, 0x01DF2D8291BAA5ECFF544683F16F36D8C83078DFD24B5C8C93DFEDA524704750_cppui_modular256},
        {0x39DA705C7CD47D34F9B2E2A7F57200F656A229398E7A0F89A5534D72C8BAA2C7_cppui_modular256, 0x1C5E177C851121F1A90AC844245B7D7D5512C822ABF4AF37213AF5B2EBCED4F0_cppui_modular256},
        {0x0A35295A58443F71E676CE42BA6FC44D4EF1DEB8E9E9C7D537CE4CD453576521_cppui_modular256, 0x3600DA2E2E5D3674E13613871FA8B9A5D96F905DD69114FBF3F69F61D0C57263_cppui_modular256},
        {0x2879FDC5D79EC2FD73D8776DD5ED76F8BC6DA10D4501AA892D11CC02152E33C5_cppui_modular256, 0x06FC48C9C7CF8B4CD94812DC8EE2ABBC4A0775D52E01097E6877F2A1A7547786_cppui_modular256},
        {0x0A3499DB18871CBF14818C2D5152742B4457FDF30DF5936172EDE2FE9A537701_cppui_modular256, 0x0548D846722829A12B1C9C39411DE0AC8C5C2F97C1953432DF60251E0DAE91B2_cppui_modular256},
        {0x25A8F59C1D7C23576952D07640231EEBDE39D9F89BB85110966096D36043DB0A_cppui_modular256, 0x0F6EB10365B419FA5179D3278BC7F834D27AD930AE11674FFC5F00549556DBB8_cppui_modular256},
        {0x1F4A67F9C220741648FBACFAC1934B09C3E903EFBE12DECFA6820656D3778DAA_cppui_modular256, 0x3685316B926A7C4351AB8AB802174B11BF8EBD5999989F0343555D9575CFA3CC_cppui_modular256},
        {0x1ECC9BE71F9ACF900FA6CDCC452550C7991BFC25258CEFACBCF51D541DF2D819_cppui_modular256, 0x0FBDFA76ACB83F9C4DF9337FEC47F38672D31E9EB5406034812E5C21C6494BDD_cppui_modular256},
        {0x2E79A282F86F8FC1B2DB59443975544DD7C92883322C82C2C283DC51A0E34825_cppui_modular256, 0x0118E6A449918C38AA0D290373F1D605DC21B6B5F228C41BFF596C635AF7761E_cppui_modular256},
        {0x3FCD47170790B2A3E85CEAEE44940DACA0E11DD132960092FB2E1613B364849B_cppui_modular256, 0x2859254A7ABFB288138B64009A85178250FD120351634CCD41D9ECE993D9F6A3_cppui_modular256},
        {0x1A29CFD3AF8F7C0F19861362DAC9FD8034F82C2C1750A425B446461B5BC63E4B_cppui_modular256, 0x15E12C10AE7FFF431F6FAAB8EE607386AA85EB7AFB806E264B8952D51404E17D_cppui_modular256},
        {0x2EECD04E0E37FAF9C51C61249470F118C5C5EA8E6DDB4B645F99C47D3BA07F68_cppui_modular256, 0x33E6418DD36692F7EE870BB3577115F87D62E9D257374950A17A3B0154B8B35D_cppui_modular256},
        {0x3BADB4DCEADF739775588552805A959B7D216BFD86847BA54D662B777B2B1FCF_cppui_modular256, 0x0CB8DEE5BE3197C76685F25D4596C766A2DA3542BD89FD9633D7590EA2B68FD0_cppui_modular256},
        {0x3FC5DE9E2422625B53D18E55C069CBCEC9C2D2C4F8DAB5B1BC11D3702F3F5E22_cppui_modular256, 0x0EE46C6ABF41C33D66B60AA4E508CE43DFE02535EF19E158AB66B49D12BD171F_cppui_modular256},
        {0x0172960667016B5FFF7A489C3BC65F38A63FB833A16AC7AF4882A193A1B9E0DE_cppui_modular256, 0x241362235399643C11C8DA0E103B5F17975EB78BF493F02DC9749905CE1E7BA7_cppui_modular256},
        {0x060A1110F23BFB345A81751266E1394C0CF7939CB382AD2387FC0F43B83E330C_cppui_modular256, 0x0403BDFA41BAD631ADE30CFE0EF41ABE17E3F4F02BE4F4394D680BD287D4152E_cppui_modular256},
        {0x0C0411B3AC12207D214F1749F3EB08746DEF500AFD2288417A03CB8C64ADCFDC_cppui_modular256, 0x05A41050D3CC198441E920E2B1D07E9B50E082B65911F4305533BE021269AC45_cppui_modular256},
        {0x136245F44B95D1AC824C6C7F385F8260F6D5C4970FE7AE3C170A37AE6622EB28_cppui_modular256, 0x197FC03FCD4758E4B7D3B28CAF5A94911DB2993EFC37F29DAF39853F58AFC559_cppui_modular256},
        {0x3C542327CCAAFA02BCE394AD125622601ADB4DDF55FF9608F31E352B57BAA272_cppui_modular256, 0x201A3AF528EDABBA05CC0B972DA2EDC9C645596ED0C89306516C93C3724C17E1_cppui_modular256},
        {0x0CBA8DE360D3EF1E92303DAEC903351A356881500BF66686F7990B0BFC9CC4D9_cppui_modular256, 0x33DADFB27017F21BAC0F56BD9AD5A7BE0A5A19A714C4DC982FB480D5186EBBD2_cppui_modular256},
        {0x3BD1FDD3FA99286EC812DBE11FD2B988AE6132BDF17A85C80ED2FD3751A6841E_cppui_modular256, 0x105AFCE44F11C190275BB98AEBFB482BCC0021812EAEA404961584C07660FE1F_cppui_modular256},
        {0x07CFF56D62EEBE6F42B55715F8982558E9F252ACBD39D30362D103EF3C98223E_cppui_modular256, 0x084950454C739DF8CC80BCF70D8B95A0ADF5843244DD1CE5D6A083E993F25E18_cppui_modular256},
        {0x1FBB25E4665F8BAB853FA6F5D416757573D546EF597E5F0479293CF2C2A94A6A_cppui_modular256, 0x197C835ECE76501982D3FC07CF8668B416738EABA5A2B7D47B670A9EF6F1F9CC_cppui_modular256},
        {0x0F9348EE41AD355E13B8EA3E11E9C3310A9BE6202C1A5AD59F644F959A51C2C7_cppui_modular256, 0x0A951D45F026168B6BBE24F6DC2C06E1E835877590215529CCA99ECCB4B22782_cppui_modular256},
        {0x146E17ACFCBFCAEA52213C07111BE2749CEF66F8659DC5C06DD0B03231A92BC3_cppui_modular256, 0x3C43FA8A983391EDFBE6756FE64AA67919BBB049323BF191962A0825B909D86D_cppui_modular256},
        {0x3A1ED0BBD35E9AFBAA00826D113E54F9823AE6344728F4A42BBC9EFFD7074832_cppui_modular256, 0x3C20D27B56210D0FE45A7AC692FE929E0768305A1790DA1E8CB5BBAE24B906BE_cppui_modular256},
        {0x171063605C748AFDF525BE0BBE745017A1105871B955BFD210F56E7AA76852E6_cppui_modular256, 0x07687195D7A46F80CE26DADA430C7824F537641F6C654033A418358383427EB6_cppui_modular256},
        {0x363E263819EEB4997CD47FA7FBC35B47FF78D551BD6ABAB919C8996A63A188BC_cppui_modular256, 0x2334D5A3A1685AA651A300835BE4D863AF5512DAE6A7971465937627C9DDD35A_cppui_modular256},
        {0x19C69BC40754819BE0BE01E22A097FB3911E061F8B1818A55B0FF2BA6952A2B5_cppui_modular256, 0x3B6BCF2566E3A1C894C6AEB801B740F767A51B5F7E931002F5AE385A601129C0_cppui_modular256},
        {0x3471FB5C070BD548AD32FEF8CB1F3F9F0E22CD7380FC7E9739D80304EFE69331_cppui_modular256, 0x3B1B5D6A11C58B24B1E6E69628C50C8894FEDCF4EA42190BB1188803D45F9D44_cppui_modular256},
        {0x177D76562D402928EA6EE3838C20AD6426841D2167307EEC3058C85481DBFFAB_cppui_modular256, 0x3E38C317E2E2B5035DC2E80653768DFC5CA8088DD8C7F2EA04861CF3CDFB6E62_cppui_modular256},
        {0x28BCEA14F64CFD5162DE1066DD22B68A20D49A1BC6FC16E71449573E1B9DC8B0_cppui_modular256, 0x21884B615876855022D0B96B1FDE642B96A11D08D90A23BC96A78BE5D1386AF9_cppui_modular256},
        {0x01EBE18E65A82CD77E7F442D534D2DA483BB6723E0B5D4B874A67E318532B0E1_cppui_modular256, 0x14E7278F16C6153C09706C2CC1D608FA47253B5F2AE0900574FEAFBE1378E26D_cppui_modular256},
        {0x366A1904B0AF71A6AFD2AA761C79B98985F39F6097CA440F5CE65563FE0B1E06_cppui_modular256, 0x2A00227D98A2C2E75EB8FA537141585C13181744CA41680F12B9703B5187AADD_cppui_modular256},
        {0x21DF93F25B9A4383F9004C8252C2D0AE2BAE44E7A6D2611D737D85FDF0F5FEAB_cppui_modular256, 0x05D8D88A4A1A9F22FD14BF7D5EC1C10ABE794B84C3871028A3DF69AF48F19193_cppui_modular256},
        {0x3A25707AA4604A4E0DB2E250BF60008BC5E3F33C77B8DF183F7AEE9294504B91_cppui_modular256, 0x2870F2ED277AA0CFBD81A4EAF3E8737589B15ECB81B0FA063656D5C445795646_cppui_modular256},
        {0x2653831E973B7D7C77C45F31C2A7209B2F6C353C731EB9128B692E5447EF42F2_cppui_modular256, 0x3C9017F46FD225938BD8F7DEE085C42C069905C4F9AD7612EFB2997C95E5238E_cppui_modular256},
        {0x08A413C57382ACF055DB927E2ED34CCB8259C7290FF8400EACFD6BF16308BC6F_cppui_modular256, 0x398990AF4D3FEC325BE1E6A3D0A8AB183D494112B9B0FD8A7AA92E2FD7741794_cppui_modular256},
        {0x02E242BDEA7226C5ADAFCC278015F469301BF4C9A4F8687FF9CDE09EF3D8BC38_cppui_modular256, 0x279D5FA5CD209F89675257B185659B89F548EBEE2865A0DAE1D12929DDD36DA8_cppui_modular256},
        {0x3C58D4342E718537E4231F3502A39F3724A03C07E5B3D68AC291E645BD4EA9C3_cppui_modular256, 0x314E911944450CE2050DD050EA72550D64F0A7FD9F1C47CD31EB1E4D19DAA8F2_cppui_modular256},
        {0x3DCE5FCF09DE55C8BC95BBDB2EF08BCD558361AE86455746DCBA6FD142513627_cppui_modular256, 0x1D461F17B4A16512A3908E117011D151E8A15354AEEF357652A7B541C9FA220F_cppui_modular256},
        {0x1371BAD9CCDDA06E18DCD9C23551DC89CCEB8D323395D8B3D83B3D0950B4A20D_cppui_modular256, 0x3CE57B893A3BD3666EAD668622B901F6E25A1B3D359642251438CEC04BB38570_cppui_modular256},
        {0x2102942CA851EF0ED89CE016C172D6EBFB72C7110A04D50B27EC230143914714_cppui_modular256, 0x02E9DBF7C11BC61F61ABE7648195F851543040551808C81E6DFE424D2D701F40_cppui_modular256},
        {0x33F626F2BDDF65045480FDF7CD921CA42254B8F4FBEEDC68D751D7DFF48AAF9A_cppui_modular256, 0x3640D5780FE1EFC6391F777B6ED6B09B7EBFAAA9B2CC0B6AF6E3BF7B572EBB79_cppui_modular256},
        {0x221F9081BAED33F9B610EBBA00D87F33A0E2F209C333E31BE17BE83B87AC838A_cppui_modular256, 0x01098EEAE4534F394020A9F2E3A9408BF2B88151D23CB87D9A7D0F306D694658_cppui_modular256},
        {0x018E6B0BEBB52C9F275C971F2FF0FCE922435A309DC9A15FD4CEC218D3700B59_cppui_modular256, 0x3B61D8723EFE39A06E9ACC7D0A2C67DCAC479479934F5593E7E9542E64B3FDA6_cppui_modular256},
    });

    std::unordered_map<std::size_t, std::vector<typename group_type::value_type> > lb;
    lb[64] = {
          {0x3C89BC840A9BFA941E3795587975566DE58A27D3D437C50C38F2617E22A39C83_cppui_modular256, 0x037A0EEEB2D1297911993DC43C13A6784351957A116C1A66D0748242690CF999_cppui_modular256},
          {0x311B73AC73D24F10E03F64D457B8FCC469CA69A718031DE58D754745447381E3_cppui_modular256, 0x3D5F15A562AFE60D10EEDCC494E91029156D901A5366814B5019FAD10767E308_cppui_modular256},
          {0x17FAAA160C38DE2C4F890E8E9F9D0CC55CF655400AD1F6D9BE86718DEA48A634_cppui_modular256, 0x2FF9EA226552FB4B51796F638C35D335A41F80B1AD2D7D665BD92907C5CBCEDD_cppui_modular256},
          {0x24FEBDFCBDC67B69F1899A665D6D1D2C210B63452B3F85D8D1B139D766DEDD8B_cppui_modular256, 0x09CFE9337A2A9095F46A0B43D2E6C28A055BBDCDB1314F71131022880D3C16F0_cppui_modular256},
          {0x0136DAD72EBCE55FA8F3763293D74D6360CACFE6C1E2E49B1932B45F0C45FB52_cppui_modular256, 0x2F149D6CF6936BB6F04E15CC317B7D847AD3C6364743077F8DD813378E4D8958_cppui_modular256},
          {0x0804A76DA2C0326D97EAEBC790CF96FFAD0511F8AAD2322448B2E61D3DB1832C_cppui_modular256, 0x0C7ABD82BA04EDE7FFFF200360F13E79A64F51DE5B2B48D88829F9BE7FDC0B7D_cppui_modular256},
          {0x38A6EFBB2BB65133E17DBE78A32DD92D2CC7203F9F170F5557EB7B8D8D4A0286_cppui_modular256, 0x145532FAA79ED6F2ABA0C8BA0A0FBCCC34A4960E44B6B522BC1D8988DAD201E6_cppui_modular256},
          {0x04D4CFA5D074EAD706F31AF4988023B9B785F1140A19D01D8A69817ECFBC0771_cppui_modular256, 0x0E74A9CE01A11DF980FA7BDD75981EE0583E31796AE55DFD222609FAA8C02731_cppui_modular256},
          {0x1F48A4346711E5FAA4487B424AA17AE53E6D4104414F9ED47E47FE663E3017C0_cppui_modular256, 0x0F934EA50068A5F16B15BCF2F95FA7B708640149AACA3AA9B3557AE7C111E4EE_cppui_modular256},
          {0x1ACDF9E08E6D7FDB7F359034A7055D54B5FDB5F04546B9886FA43A56CE224F13_cppui_modular256, 0x0511C6980AFE051256A6F0CEAF1D391F4634C307AC432CAD6694899E88700A6F_cppui_modular256},
          {0x263AAA4441BB60272EEF0774918FB22DA9BB2D40893ED3C95397266DD2646F46_cppui_modular256, 0x14AFC51B9C097EBC59187FA9B5C5E0E3D370A33D4D95D8B00D0AD1D4EF16C644_cppui_modular256},
          {0x00FB91CCBD9B18645BDC0B54096458F20A286CFDC7271E79C1102E3AF6D20A4D_cppui_modular256, 0x02EB26A22949C21D5015E9CD09A4723EB3EC0D5F03D86D80648F96D2AC8AE68F_cppui_modular256},
          {0x2DF6658AB48DA915166CB36E301D39FCDC4C22FF3BC729858F4D832E2437713F_cppui_modular256, 0x371210957FE84FA3861700AD6565AF2B5255E1615E13C035595A884DB4D17F1D_cppui_modular256},
          {0x222C42D9F0E4B95745B4942D329E9F175E98045286D7043FA927087B977D471D_cppui_modular256, 0x2918339EBEA41F2BA9AAF690CB4DBC23A6B73441A4394B9F4A4D6909F38ACA0C_cppui_modular256},
          {0x3624A396CB168A1203C991119ECBBC6198722121298DC4B3ED0C5815BC5CF25A_cppui_modular256, 0x3FD7696D730E57FFD17411388C1394F00B0ED51BED3949D6E8104DF6E7051034_cppui_modular256},
          {0x15FDB7C4200AFE05277EE9BAEFA8A35DBD6B2064DFFD19BBADF0451C87737CB4_cppui_modular256, 0x1679DF1E82C8D7B213CA50AE4FB4C01B451C35FB9773D1AFCA88F4036E7DE6B5_cppui_modular256},
          {0x168C859A6F15D8FCF7F04CD64CCB765E40D5133230772A96D5794F345339056F_cppui_modular256, 0x12DBDEDA81DC4F3BFF48DED7ED60871EBDCE3F645230430F854532FDC7669EF5_cppui_modular256},
          {0x29BCFC91A2A6AD3A0967E2B413A426C8B55105479AB3D7E5A6E1F6E14112042D_cppui_modular256, 0x0B838A8D03F7A7E4CAF0FAA27CF26298380D8877C22AB47D226EC6C94ED1D41E_cppui_modular256},
          {0x107059654B51B4DE00EA74A04AEB2F1D262BB0ADBC1F74886098152FC1D42C21_cppui_modular256, 0x2007CF92469A2E935A5B6849146B974AE49F5A226FD0FF348C9BBA3E49D03F77_cppui_modular256},
          {0x320E00A7C54FDD11AFDC1CFFCE893A578B89EC7929A369735387503CBD7BAD56_cppui_modular256, 0x18516D9F2EEF18B9CD474EAB18E58F08C8FF7A647514D212E617343CFA8E4BFD_cppui_modular256},
          {0x3352BB1A90CF8A7250183BA1AE95644B390C8429F2D3CB0A1F9A0B8FA69C12D8_cppui_modular256, 0x0906450E7D4AC8394CC2723FDA6A84D9BD2DD83F65F19D93D85C3B14970AFAF1_cppui_modular256},
          {0x2080B1B270D63DF226EE44C5E03036656B437F88E972061E3D26A190A3427FCB_cppui_modular256, 0x34D9BA01F40B2E521EA0A7493ED7B7AD7F419634BDE91809BB747981F4BA4691_cppui_modular256},
          {0x1B72B4BD6713F958EAEB8F91A1DB37D245B0B31E43C98282DE58DA424D0E7CDC_cppui_modular256, 0x3B36009A35DED46973B3E2BF4BB64EE3406916D927F8A00E452FAE381D3C2AD6_cppui_modular256},
          {0x3AD4D7F604FC1261F3AA227E61ABFD3DB766B9CADF07660471289264682633BD_cppui_modular256, 0x2C87A76A484DF472917476A5ABCC8FE7324123F4365B176391A5F65A3D4EE47F_cppui_modular256},
          {0x3E0A9D8A6BD0DF3C64D8964829CA93FB70B400344BB0AB6E117874F4DDE6DF6A_cppui_modular256, 0x311DED62A49E2E452C9B96350E45B2C52AA2951F09321652B255703AFD213FE6_cppui_modular256},
          {0x3E4C3344680BDE8FCD5E7934067D0642C178BAD402F2CD554DC15C7E29D9982B_cppui_modular256, 0x2A92BBC7B9DC4A592BDEBC06510476FDAB5B5AC2BF28984A27C4ADA37CE39D97_cppui_modular256},
          {0x0F429110528C4DCBA1E59682B9467A30C6F366F0BE8FC2FC597DE75A4447FDAC_cppui_modular256, 0x0813847967DB68D88DA632E74A3E1D2C7C09E775719F48D802D6A2546B122DFE_cppui_modular256},
          {0x3AB2F27A8040747A3D0A74B9F45AF533DAD6D79103D5B7EF02D4A0EB09C9B91B_cppui_modular256, 0x11EE126988D11C7232E60D920B51B7CC2391AD5324AF32AEC1EAC8C485FABEBC_cppui_modular256},
          {0x20CBDB07812379E2074B969E43A22699FA6B2803FC00087BBDA531E5C6D14B39_cppui_modular256, 0x15A465EDDC45B8EB428E9B23B14D3084F99096AF3E5988E1098A5957F9937BB4_cppui_modular256},
          {0x23CF677347411249DB6BC8853AB2B562229E7B773C4E18AFEFB57A5123B5EDC5_cppui_modular256, 0x03A2CF573B4EB51DEB58A057A611B8A641FA3C4B78B039BC1D25522F1F4E152B_cppui_modular256},
          {0x0A844BAB65A39230B31A1F8339D275C932BDC044F3E45C20118F2CB0A3585F49_cppui_modular256, 0x154E9EA6E40A8F5243BACC1D5613300F2D709AE0E8958FD3CC47143BD5C532B5_cppui_modular256},
          {0x0D072415CB893496134E551EE4C4582262FB1B8E37AFD1BF6C7CD57E33115B7F_cppui_modular256, 0x3804E5B57477FB43239378D6C220EF0930C6732CCC242ABC6A9368C0664AAD7A_cppui_modular256},
          {0x1E7B4D1881A5BB64CAA8FB1E2815A8CDC8AFEF00649BDECE17596554C636AA9C_cppui_modular256, 0x177CC53E9B41D37E5058B9AE33D82413F32F535DA37444B212CB4B3BC221F9AF_cppui_modular256},
          {0x3F43332116BD7C42986271B0C98066D0A5F5A2B5FC9DB32F3F8E272BF7EB9FF2_cppui_modular256, 0x0C827C6BDB35BCE4F8DD289056AA2F1B95F9A7BFBA3116B20CFE98E894682092_cppui_modular256},
          {0x28CA8B3695515D80A55CB135B42DC68B11204EDEC6E1E57B90763D8B764D4E4A_cppui_modular256, 0x2366E50F7EBBE57A68E0320B0CF43615A1A038F56885FAF4D4F08390518A31F1_cppui_modular256},
          {0x28BA918C4AFDAA3E87F07B1DBA299F849C323C66463B81E7D29381532DA03DCC_cppui_modular256, 0x21C5E945F8877E52CDAF2B7D37AAD1F895F1F23C853FB5F36B7E822611284F82_cppui_modular256},
          {0x3FCFA209B59D36F244DFDBB45C667CD518B58D21DD042B76785F4FBA80F4B7EA_cppui_modular256, 0x1DAA63C559BF92982E773F16524722CFEF8384A1CB7DB8FD500847EAFA2386E0_cppui_modular256},
          {0x1C52D056521BC5AAB401F489B5A099BC4E2FF9112E8E89F79ABFA83F6141B1E7_cppui_modular256, 0x3975139F4FF73871BA2D1B228135C1ED6F807FD4729BFD25773DCD0CA0567AEC_cppui_modular256},
          {0x39CA6B9121820798E4F8C9E56FAA19F6C6186E91FB58B9219A57CF946EB4404C_cppui_modular256, 0x00F36DE792588AE497FC844588103E3EF3AEC5378443D5CF4D8A31924B15F409_cppui_modular256},
          {0x366276BAC098B06CCB3BF10CDD74AE208A6F72DD295A439481F3FF0F19EA4472_cppui_modular256, 0x05682488CC82C1C4B963B0F4B696574B216D10E3DEF1970E7DD6EF1D4D9DC95E_cppui_modular256},
          {0x3E6E698789A213627EEF178DCCE852BBDCDE95F2FEF6F99ADB54BA91A4DBD633_cppui_modular256, 0x3D1BCC88A6C0F515C42AD2FF96B4485580D8900B53CBD1E9D9B6C874012DA1CA_cppui_modular256},
          {0x06FDA94AC505426D3D5C8B82B96A1512E44F4A84849178753BE8346EB068E4C9_cppui_modular256, 0x1EB1DB4AA54111F8105904ACE22576022989821736A3273ADAA71E561717B410_cppui_modular256},
          {0x340DCBE21EA8A8F1D9DF1F07E51B3CB97D8284F28ACCE8497E445C259F213BB4_cppui_modular256, 0x2DA0ABCF3573491D505CC5F619523BD2453FD67287A6109EAEDF00E5A2906740_cppui_modular256},
          {0x1AF462A6713530F9C71A555363B5199F839B8B39154663C67264F3B5DC6F9691_cppui_modular256, 0x209E3B30E10ABE2F47D0D28E56BC22E4F7FD746D9BFEF7CD5093880D4A32BDD8_cppui_modular256},
          {0x0A5A714A06E8CEF3695DC12B7BB2CE62682EF127A922E1941595EEA4521DAA9B_cppui_modular256, 0x083549F026A2C593AD6A21B5B18546AD77B8999C8EC48FBB90F4A7A5CBF4BBE6_cppui_modular256},
          {0x319D8AAF8C24EB1067A600FEDD5E89DF9141395BF1C51E0145ACD251A375C616_cppui_modular256, 0x1231B2BCE3B7E245A93682F5C776B387F0AAB9637E984C8C9023E27F60DCBD85_cppui_modular256},
          {0x2839EA83958EB5C4018A2618FA89A78C99E905A49A119A4DECD2FC80319C3E5F_cppui_modular256, 0x1D74130ED38B699544BA43687070012EE571009FEB480B15346104AE1A5E910A_cppui_modular256},
          {0x24914C51064F1BEEF7A723A34A26709AA02BC4CE8D44FB4ED3F31356838A095F_cppui_modular256, 0x152137EC9B4777B8C6F913E3268E2261B44C41B8DA89A7BCF1BCB24711CA45F1_cppui_modular256},
          {0x2E1B58CC9A736C19547D35B15B88E4A5C6852B93B9FA079A564B25F63608B97C_cppui_modular256, 0x267DBE881E33F759E3CA043DC58991CDE682DDF3D52A2C9C6C743369CF34D52C_cppui_modular256},
          {0x1997469E9AFCE26367CBFAEAB96C25BC79B36EFDA34885B2E9EEBD16EF5F7E1D_cppui_modular256, 0x1538A3F7C25841AC797CF7E25EEEFCA7F41C071CC306728F174A4ED211FE6ACD_cppui_modular256},
          {0x32BE50F7D0C1E119F925FFECB9D6EDF01F2051628EA6B8D473A1E3813E39A6CD_cppui_modular256, 0x2819810C3D069979C7BDD4DF764E7E5EB21CDC68C4C6D856D7FFC35EE5A35615_cppui_modular256},
          {0x2C29D5A8980BDACE5708A7D42C4EE5900C14638D63B5E4A56D2A525384ECEB0D_cppui_modular256, 0x14097A6815520C3EC8B0D61CF6E1ACBFC37B3FBB9CC588F04DFD4F8F3DB0C8B3_cppui_modular256},
          {0x02DE03DB892A85BD073B31F33E4F7DA209AF0F66A7185A23C537C453A152292F_cppui_modular256, 0x3A31D9BB9A44A12E2685C23AB864490D0A7943187BDD31F87FE9E6E787448E0E_cppui_modular256},
          {0x37E39B187FF0747D2CCAD7092AA9CB24A6AE2DB7CF17BFD23D3DA657FCCA695D_cppui_modular256, 0x2CE80F107CCB457C9E78CE10B4BA5BE5623DA20C1ED45BB00E6780C6A767CC83_cppui_modular256},
          {0x3B593FA9CB5848054B88DF7A09E84F97F999545DD30524BA158D1C77144A7D14_cppui_modular256, 0x0F0A7E093F5DA7C75DFC238BC36125F02ED97BD79C425B1A77B740467D379509_cppui_modular256},
          {0x056338F486ACBC5048CB96BE50676D31DBA01F962FBF177A9E9F3112671AD51D_cppui_modular256, 0x0C8EC6604982DF2AF84709DCD16FD7EF89CCE63EED31868106E0FE53478F5EE3_cppui_modular256},
          {0x123E53A4A256FD4711C68003B0F17D90708976723116BF1972B10643BACCFB06_cppui_modular256, 0x23F176C9D80799DB9F7396E649517B942747AB57F79E2CCBCC9A46BD954BAACE_cppui_modular256},
          {0x3237CF192BD09509F090E30147FDE7877BC2214DA7CD4524E6D46F4AA24422F8_cppui_modular256, 0x0489D219C52A9912C4DDF4713F8E2B5D7D1470AFAF7DD1D31206C0549DDFCB3B_cppui_modular256},
          {0x19029EB9DEC80B3A35F875F806C621E19938211623B0CA7325F092A091A8ED4A_cppui_modular256, 0x38EC6FA4220CBFB39BA2ABB78861FD1B293D1147833BF7C19430E8CEE4DDB688_cppui_modular256},
          {0x2B3C070B9B85E1723CEB55DE10A309F0E948F1A8507134DD7188024F8DE12BA9_cppui_modular256, 0x3F2992F73FECA28A841A4F51662BF667B2B8CE49DEE75C7B51AEE082FB050FCF_cppui_modular256},
          {0x227D4B9A0C21B7CDA0D85E91AFFD9D8E38B51CBD0BC877B92A7EC1B315B3B24D_cppui_modular256, 0x39E7154095B659B654F69BE25AD02188536ADDD0F30C4235C22282847E809B8C_cppui_modular256},
          {0x20C8053B87A050C01008750EFC18489AA56C138743769A4AD7553D29F2531AE7_cppui_modular256, 0x2F46839877B7DB1EC2689916B93533D60F4F6E6C583A2CBB43879695E059B4FE_cppui_modular256},
          {0x21533DF31582C49F0534D6B39711EF3FCE360E85354949F4E717F337F3EA3024_cppui_modular256, 0x064F8D082581EBAE41A3BCB4BB388941EA3B679E2DF0E6D6F5F4D9E21A508E8A_cppui_modular256},
          {0x318F8D6E431858DE00CAD3B9EDDFA82B9AA5332DDFE90DD511D13405BEBC45D5_cppui_modular256, 0x1CD48075F42F46FA8E87CF3D326CE480DB2BBDFE144FBC75AD0A2409E6C91406_cppui_modular256},
    };

    index.srs.lagrange_bases = lb;

    index.srs.h = {0x092060386301C999AAB4F263757836369CA27975E28BC7A8E5B2CE5B26262201_cppui_modular256,
                            0x314FC4D83AE66A509F9D41BE6165F2606A209A9B5805EE85CE20249C5EBCBE26_cppui_modular256};

    index.srs.endo_q = 0x06819A58283E528E511DB4D81CF70F5A0FED467D47C033AF2AA9D2E050AA0E4F_cppui_modular256;
    index.srs.endo_r = 0x12CCCA834ACDBA712CAAD5DC57AAB1B01D1F8BD237AD31491DAD5EBDFDFE4AB9_cppui_modular256;

    std::vector<std::vector<group_type::value_type>> sigma_commitments_unshifted = {
        {{0x26C9349FF7FB4AB230A6F6AEF045F451FBBE9B37C43C3274E2AA4B82D131FD26_cppui_modular256, 0x1996274D67EC0464C51F79CCFA1F511C2AABB666ABE67733EE8185B71B27A504_cppui_modular256}},
        {{0x35AF80504B4DBF58CE3535F3E159BD407695088EFBF1EF56D4597A7F1CBEF531_cppui_modular256, 0x2D36B9BCB23702DF2F4A2C9E60ABBB81C2BE261D227AF025DDDE4FFF354727CB_cppui_modular256}},
        {{0x1CFDC82F8279850B957D0BDE2A188AD5060D80A97EF8B4E56CD17CFE1067CBD9_cppui_modular256, 0x2863D1D7D5EFC2155B2BCCB849B6EA6738E2705A4DC63115045B797E2CFA6511_cppui_modular256}},
        {{0x262ABA0787800EF4CBD18688A534659AB77861C373006A4E0E42BC06D85F9E79_cppui_modular256, 0x150A55D182F3B621B10774BD11C8B8198048DEE7C535DDD08992B41928E45DC3_cppui_modular256}},
        {{0x0C51759D046C2382B5800C5CAA9D9DF74636E1FE0671DF237CD2AC771D56436D_cppui_modular256, 0x39AE43E4BE7084DB9EFDCA61204B29929A2C242605FEFE95F41F0D5DD286DA38_cppui_modular256}},
        {{0x18819B168F851F614CF0DD2F4C30030C1267688C1723BF68293324770AB41DE3_cppui_modular256, 0x1E03B384B597E7A9F17F1B7E36A0B1179291AD17F30C8871379318BADEC65C8C_cppui_modular256}},
        {{0x12D8B90170966FA0956A13A852F52EA682F50A66738527AD24827CAC02A7EDF0_cppui_modular256, 0x3566FB28328CAA573331BECEAE6CED6440F32CD9191FA3DFC7A97BBC681DFF30_cppui_modular256}},
    };

    for(int i = 0; i < index.sigma_comm.size(); ++i){
        index.sigma_comm[i].unshifted = sigma_commitments_unshifted[i];
    }

    index.complete_add_comm.unshifted = {
        {0x0A4A178180BC6805CE9A4EBD32096780850C51CCC28D177FD967545D2B258B7F_cppui_modular256,
         0x0FEE8D807491B9385C499C3FC4048B076FFA334C5D14E19FFCF4A3AA26391F91_cppui_modular256}
    };

    index.shift = {
        0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256,
        0x00B9CDC8FD0BD4B27E2A74AF7AEBD5734D52D75BDF85EBF1CAD03413E914A2E3_cppui_modular256,
        0x0033BFCF8112720332825BD83D44D92CADC0C30466E8102C419C30FA2665695A_cppui_modular256,
        0x0087F4BB29954E16960F2DE3A1FA5AC7B62146DB348C7C9F0E8BF10B2C8E8411_cppui_modular256,
        0x00EC71373B9F6CF15ED1949647365DB60B2E26C3A8ABBA5BB06BF23E9DBE5893_cppui_modular256,
        0x00F39197CC4C55084C68D31F64F1A172406B585CB86445F00C248C721C496D10_cppui_modular256,
        0x00B8DD039799DBEE12D2E6A4299A83E067353C0143C5DFD203190C239159EEA3_cppui_modular256,
    };

    index.zkpm = {
        0x09A34F1BBA67AF009244016BF35AC10B2E69F4D0CCD1D4DC3224A0EB1B74A8B0_cppui_modular256,
        0x0C8A48BFC715E34B967F6C3AC31D85365479365291235AEFB8FD6316EE248595_cppui_modular256,
        0x3F325BBF0B081782F305686C3A74163236DBB334B393D9B7AF4B577B6CE6EDBB_cppui_modular256,
        0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256,
    };

    index.w = 0x3DFB4B65F2CDFB71DF8EAFB896CAE55375F24670939CE3BD5EBCB1BB6D3421E9_cppui_modular256;
    index.endo = 0x2D33357CB532458ED3552A23A8554E5005270D29D19FC7D27B7FD22F0201B547_cppui_modular256;

    index.linearization.constant_term = {
        PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))), //
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6))), //
        PolishToken<scalar_field_type>(std::make_pair(0, 0)), //
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0))), //
        PolishToken<scalar_field_type>(token_type::Pow, 7), //
        PolishToken<scalar_field_type>(token_type::Store), //
        PolishToken<scalar_field_type>(token_type::Mul), //
        PolishToken<scalar_field_type>(std::make_pair(0, 1)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1))), //
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(0, 2)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 1),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7))),
        PolishToken<scalar_field_type>(std::make_pair(1, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 0),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(1, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 1),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(1, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 2),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 2),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8))),
        PolishToken<scalar_field_type>(std::make_pair(2, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 0),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(2, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 1),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(2, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 2),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 3),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9))),
        PolishToken<scalar_field_type>(std::make_pair(0, 0)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(0, 1)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(0, 2)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 4),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10))),
        PolishToken<scalar_field_type>(std::make_pair(1, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 3),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(1, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 4),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(1, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 5),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 5),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11))),
        PolishToken<scalar_field_type>(std::make_pair(2, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 3),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(2, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 4),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(2, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 5),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 6),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12))),
        PolishToken<scalar_field_type>(std::make_pair(0, 0)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(0, 1)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(0, 2)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13))),
        PolishToken<scalar_field_type>(std::make_pair(1, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 6),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(1, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 7),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(1, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 8),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 8),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14))),
        PolishToken<scalar_field_type>(std::make_pair(2, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 6),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(2, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 7),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(2, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 8),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 9),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3))),
        PolishToken<scalar_field_type>(std::make_pair(0, 0)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(0, 1)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(0, 2)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 10),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4))),
        PolishToken<scalar_field_type>(std::make_pair(1, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 9),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(1, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 10),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(1, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 11),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 11),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5))),
        PolishToken<scalar_field_type>(std::make_pair(2, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 9),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(2, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 10),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(2, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 11),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 12),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Next)),
        PolishToken<scalar_field_type>(std::make_pair(0, 0)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(0, 1)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(0, 2)),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5))),
        PolishToken<scalar_field_type>(token_type::Pow, 7),
        PolishToken<scalar_field_type>(token_type::Store),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 13),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Next)),
        PolishToken<scalar_field_type>(std::make_pair(1, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 12),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(1, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 13),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(1, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 14),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Alpha),
        PolishToken<scalar_field_type>(token_type::Pow, 14),
        PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Next)),
        PolishToken<scalar_field_type>(std::make_pair(2, 0)),
        PolishToken<scalar_field_type>(token_type::Load, 12),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(std::make_pair(2, 1)),
        PolishToken<scalar_field_type>(token_type::Load, 13),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(std::make_pair(2, 2)),
        PolishToken<scalar_field_type>(token_type::Load, 14),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Sub),
        PolishToken<scalar_field_type>(token_type::Mul),
        PolishToken<scalar_field_type>(token_type::Add),
        PolishToken<scalar_field_type>(token_type::Mul)
    };

    index.linearization.index_term = {
        std::make_tuple(Column(column_type::Coefficient, 3), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 3),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 6), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 6),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 1), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 5), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 5),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 4), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 4),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(gate_type::EndoMulScalar), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x1555555555555555555555555555555560C232FEADC45309330F104F00000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x2000000000000000000000000000000011234C7E04A67C8DCC9698767FFFFFFE_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB061197F56E229849987882780000002_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 2),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 0),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 2),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 3),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 4),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 5),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 6),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 7),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000003_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 3),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 4),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 5),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 6),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 7),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 8),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 9),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x000000000000000000000000000000000000000000000000000000000000000B_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ECFFFFFFFB_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
        })),
        std::make_tuple(Column(column_type::Coefficient, 1), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(gate_type::EndoMul), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 2),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 3),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 4),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::EndoCoefficient),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 5),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 0),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 2),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 6),
          PolishToken<scalar_field_type>(token_type::Load, 3),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 2),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Load, 0),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 7),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::EndoCoefficient),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 8),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 4),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 6),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 9),
          PolishToken<scalar_field_type>(token_type::Load, 7),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 6),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 5),
          PolishToken<scalar_field_type>(token_type::Load, 4),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
        })),
        std::make_tuple(Column(column_type::Coefficient, 7), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 7),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 1), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 2), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 2),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 8), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 8),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(gate_type::CompleteAdd), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Load, 0),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 2),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 0),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 3),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 4),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 5),
          PolishToken<scalar_field_type>(token_type::Load, 2),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 6),
          PolishToken<scalar_field_type>(token_type::Load, 2),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
        })),
        std::make_tuple(Column(column_type::Coefficient, 0), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 1), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(gate_type::VarBaseMul), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Dup),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 2),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 3),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Load, 2),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 0),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 4),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 2), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 2),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 5),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 6),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 3), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 7),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Load, 5),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 4),
          PolishToken<scalar_field_type>(token_type::Load, 4),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 3),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 8),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 8), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 4),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 7), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 5),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 9),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 4), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Load, 8),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 7),
          PolishToken<scalar_field_type>(token_type::Load, 7),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 6),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 7),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 9), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 8),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 5), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 10), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 9),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 12), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 6), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(0x0000000000000000000000000000000000000000000000000000000000000001_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 11), CurrOrNext:: Next)),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Store),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Curr)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 2),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 1), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 14), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(token_type::Add),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 13), CurrOrNext:: Curr)),
          PolishToken<scalar_field_type>(Variable(Column(column_type::Witness, 0), CurrOrNext::Next)),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Load, 1),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Sub),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Add),
        })),
        std::make_tuple(Column(column_type::Coefficient, 1), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 1), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 1),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
        std::make_tuple(Column(column_type::Coefficient, 9), std::vector<PolishToken<scalar_field_type>>({
          PolishToken<scalar_field_type>(Variable(Column(gate_type::Poseidon))),
          PolishToken<scalar_field_type>(token_type::Alpha),
          PolishToken<scalar_field_type>(token_type::Pow, 9),
          PolishToken<scalar_field_type>(0x40000000000000000000000000000000224698FC094CF91B992D30ED00000000_cppui_modular256),
          PolishToken<scalar_field_type>(token_type::Mul),
          PolishToken<scalar_field_type>(token_type::Mul),
        })),
    };
    index.powers_of_alpha.register_(argument_type::GateType, 21);
    index.powers_of_alpha.register_(argument_type::Permutation, 3);

    group_map<curve_type> g_map;
    BOOST_CHECK(verifier<curve_type>::verify(g_map, index, proof));
}
BOOST_AUTO_TEST_SUITE_END()
